// 格式化距离
function formatDistance(distance) {
  if (distance && distance / 1000 > 1) {
    return (distance / 1000).toFixed(2) + "km";
  } else {
    return Number(distance).toFixed(0) + "m";
  }
}

// 格式化日期
function formatDate(date) {
  if (date && date.length >= 8) {
    return (
      date.substring(0, 4) +
      "-" +
      date.substring(4, 6) +
      "-" +
      date.substring(6, 8)
    );
  }
}

// 格式化时间
function formatTime(time) {
  if (time && time.length >= 6) {
    var start = parseInt(time.substring(0, 2));
    var end = start + 1;
    return (
      start +
      ":" +
      time.substring(2, 4) +
      ":" +
      time.substring(4, 6) +
      "-" +
      end +
      ":" +
      time.substring(2, 4) +
      ":" +
      time.substring(4, 6)
    );
  }
}

// 格式化时间
function formatTimeSingal(time) {
  if (time && time.length >= 6) {
    return (
      time.substring(0, 2) +
      ":" +
      time.substring(2, 4) +
      ":" +
      time.substring(4, 6)
    );
  }
}

// 银行卡脱敏
function hiddenBankCard(bankNumber) {
  if (bankNumber && bankNumber.length > 0) {
    var regexp1 = getRegExp("[0-9]", "gi");
    var regexp2 = getRegExp("(.{4})", "g");
    var l1 = bankNumber.length;
    var s1 = bankNumber.substring(0, 6);
    var s2 = bankNumber.substring(l1 - 4);
    var s3 = bankNumber.substring(l1 - 10).replace(regexp1, "*");
    var hiddenNum = s1 + s3 + s2;
    hiddenNum = hiddenNum.replace(regexp2, "$1 ");
    return hiddenNum;
  }
}

// 手机号脱敏
function hiddenPhone(phone) {
  if (phone && phone.length > 0) {
    var regexp = getRegExp("[0-9]", "gi");
    var s1 = phone.substring(0, 3);
    var s2 = phone.substring(7);
    var s3 = phone.substring(3, 7).replace(regexp, "*");
    return s1 + s3 + s2;
  }
}

// 姓名脱敏
function hiddenName(name) {
  if (name && name.length > 0) {
    var len = name.length;
    var first = name.substring(0, len - 1);
    return first + "*";
  }
}

// 金额格式化 正则表达式为：\B(?=(?:\d{3})+$)（格式化可能会修改斜杠）
function formatAmount(amount) {
  if (amount && amount.length > 0) {
    var regexp = getRegExp("B(?=(?:d{3})+$)", "g");
    var strArr = parseFloat(amount).toFixed(2).toString().split(".");
    var hiddenNum = strArr[0].replace(regexp, ",") + "." + strArr[1];
    return hiddenNum;
  }
}

// 获取账号尾号
function tailNumber(account) {
  if (account && account.length > 0) {
    return account.slice(-4);
  }
}

// 时间戳转换
function getTime(time) {
  if (time && time.length > 0) {
    var date = getDate(time);
    var Y = date.getFullYear() + "-";
    var M =
      (date.getMonth() + 1 < 10
        ? "0" + (date.getMonth() + 1)
        : date.getMonth() + 1) + "-";
    var D = date.getDate() < 10 ? "0" + date.getDate() : date.getDate();
    return Y + M + D;
  }
}

//账户类别
function formatBankType(type) {
  if (type && type.length > 0) {
    switch (type) {
      case "ESAV":
        return "企业基本户";
      case "ERMY":
        return "企业一般户";
      case "ESPL":
        return "企业专用账户";
      case "ETMP":
        return "企业临时户";
      case "EOFT":
        return "外币-经常项目";
      case "EPIT":
        return "外币-资本项目";
      case "EWBH":
        return "企业外币活期账户";
      case "EMCS":
        return "企业多币种活期账户";
      case "ELOA":
        return "贷款户";
      case "EINS":
        return "内部户";
      case "ETIM":
        return "单位定期账户";
      case "ENDA":
        return "企业通知存款账户";
      case "EAGE":
        return "企业协议存款";
      case "ENRA":
        return "NRA账户";
      case "ECER":
        return "企业保证金";
      case "EYAN":
        return "企业验资户";
      case "ESDC":
        return "公司借记卡";
      case "ECAV":
        return "同业活期账户";
      case "EFAV":
        return "财付通账户";
      case "EZBA":
        return "零余额账户";
      case "EPSA":
        return "房产监管账户";
      case "ECSA":
        return "房产监管账户";
      case "EIDA":
        return "同业定期账户";
      case "EWBD":
        return "单位定期外汇账户";
      case "ETDA":
        return "单位定期保证金账户";
      case "ECDA":
        return "单位大额存单";
      case "ESDA":
        return "单位结构性存款";
      case "PDBC":
        return "一卡通";
      case "PSAV":
        return "活期账户";
      case "PSDC":
        return "借记卡";
      case "PSDP":
        return "存折";
      case "PTIM":
        return "定期存单";
      case "PMCS":
        return "活期一本通";
      case "PMCT":
        return "定期一本通";
      case "PCRC":
        return "公务卡";
      case "OTH":
        return "其他";
      case "PPDC":
        return "活期单账号";
      case "PTOL":
        return "零整存折";
      case "PTDD":
        return "定活两便";
      case "PNDA":
        return "利生利";
      case "PNDB":
        return "国债存单";
      case "SAT":
        return "储蓄";
      case "PEBC":
        return "电子账户";
      case "VCAD":
        return "直销账户类型";
      case "XFZF":
        return "先锋电子账户";
      case "PIC":
        return "IC卡";
      case "MSC":
        return "磁条卡";
    }
  }
}

module.exports = {
  formatDistance: formatDistance,
  formatDate: formatDate,
  formatTime: formatTime,
  hiddenBankCard: hiddenBankCard,
  hiddenPhone: hiddenPhone,
  hiddenName: hiddenName,
  formatAmount: formatAmount,
  formatTimeSingal: formatTimeSingal,
  tailNumber: tailNumber,
  getTime: getTime,
  formatBankType: formatBankType,
};
